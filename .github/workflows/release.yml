name: release

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  deploy:
    environment: prod
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: go
        uses: actions/setup-go@v2.1.4
        with:
          go-version: 1.17

      - name: go env
        id: go-env
        run: |
          echo "::set-output name=cache::$(go env GOCACHE)"
          echo "::set-output name=modcache::$(go env GOMODCACHE)"

      - name: cache
        uses: actions/cache@v2.1.7
        with:
          path: |
            ${{ steps.go-env.outputs.cache }}
            ${{ steps.go-env.outputs.modcache }}
          key: release-${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            release-${{ runner.os }}-go-

      - name: checkout
        uses: actions/checkout@v2

      - name: login
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=edge,branch=main
            type=sha

      - name: build
        run: make build

      - name: image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: get short sha
        id: var
        shell: bash
        run: |
          echo "::set-output name=sha::$(git rev-parse --short HEAD)"

      - name: set version
        run: sed 's/bot:main/bot:sha-${{ steps.var.outputs.sha }}/g' deployment.yml > deployment.release.yml

      - name: deploy
        uses: steebchen/kubectl@v2.0.0
        with: # defaults to latest kubectl binary version
          config: ${{ secrets.KUBE_CONFIG_DATA }}
          command: apply -f deployment.release.yml

      - name: ensure
        uses: steebchen/kubectl@v2.0.0
        with:
          config: ${{ secrets.KUBE_CONFIG_DATA }}
          command: rollout status deployment/bot
