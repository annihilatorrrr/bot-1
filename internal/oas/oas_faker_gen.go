// Code generated by ogen, DO NOT EDIT.

package oas

import (
	"time"

	"github.com/google/uuid"
)

// SetFake set fake values.
func (s *AcquireTelegramAccountOK) SetFake() {
	{
		{
			s.AccountID.SetFake()
		}
	}
	{
		{
			s.Token = uuid.New()
		}
	}
}

// SetFake set fake values.
func (s *CreateTelegramAccountOK) SetFake() {
	{
		{
			s.AccountID.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *CreateTelegramAccountReq) SetFake() {
	{
		{
			s.PhoneNumber.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *Error) SetFake() {
	{
		{
			s.ErrorMessage = "string"
		}
	}
	{
		{
			s.TraceID.SetFake()
		}
	}
	{
		{
			s.SpanID.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *Health) SetFake() {
	{
		{
			s.Status = "string"
		}
	}
	{
		{
			s.Version = "string"
		}
	}
	{
		{
			s.Commit = "string"
		}
	}
	{
		{
			s.BuildDate = time.Now()
		}
	}
}

// SetFake set fake values.
func (s *HeartbeatTelegramAccountOK) SetFake() {
	{
		{
			s.AccountID.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *OptSpanID) SetFake() {
	var elem SpanID
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptString) SetFake() {
	var elem string
	{
		elem = "string"
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptTraceID) SetFake() {
	var elem TraceID
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *ReceiveTelegramCodeOK) SetFake() {
	{
		{
			s.Code.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SetTelegramAccountCodeOK) SetFake() {
	{
		{
			s.AccountID.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SetTelegramAccountCodeReq) SetFake() {
	{
		{
			s.Code = "string"
		}
	}
}

// SetFake set fake values.
func (s *SpanID) SetFake() {
	var unwrapped string
	{
		unwrapped = "string"
	}
	*s = SpanID(unwrapped)
}

// SetFake set fake values.
func (s *TelegramAccountID) SetFake() {
	var unwrapped string
	{
		unwrapped = "string"
	}
	*s = TelegramAccountID(unwrapped)
}

// SetFake set fake values.
func (s *TraceID) SetFake() {
	var unwrapped string
	{
		unwrapped = "string"
	}
	*s = TraceID(unwrapped)
}
